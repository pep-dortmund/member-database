"""empty message

Revision ID: aaabaee93687
Revises:
Create Date: 2019-11-20 13:44:32.279829

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "aaabaee93687"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "access_level",
        sa.Column("id", sa.String(length=32), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "event",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("notify_email", sa.Text(), nullable=True),
        sa.Column("max_participants", sa.Integer(), nullable=True),
        sa.Column("registration_open", sa.Boolean(), nullable=True),
        sa.Column("registration_schema", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "person",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.UnicodeText(), nullable=False),
        sa.Column("membership_pending", sa.Boolean(), nullable=True),
        sa.Column("member", sa.Boolean(), nullable=True),
        sa.Column("email", sa.String(length=120), nullable=False),
        sa.Column("email_valid", sa.Boolean(), nullable=True),
        sa.Column("date_of_birth", sa.Date(), nullable=True),
        sa.Column("joining_date", sa.Date(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "registration_status",
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "role",
        sa.Column("id", sa.String(length=32), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "access_levels",
        sa.Column("role_id", sa.String(length=32), nullable=False),
        sa.Column("access_level_id", sa.String(length=32), nullable=False),
        sa.ForeignKeyConstraint(
            ["access_level_id"],
            ["access_level.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.id"],
        ),
        sa.PrimaryKeyConstraint("role_id", "access_level_id"),
    )
    op.create_table(
        "event_registration",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=True),
        sa.Column("person_id", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("data", sa.JSON(), nullable=True),
        sa.Column("timestamp", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["event.id"],
        ),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["person.id"],
        ),
        sa.ForeignKeyConstraint(
            ["status"],
            ["registration_status.name"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("event_id", "person_id", name="unique_person_event"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=64), nullable=True),
        sa.Column("password_hash", sa.String(length=128), nullable=True),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["person.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=True)
    op.create_table(
        "roles",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.String(length=32), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "role_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("roles")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_table("user")
    op.drop_table("event_registration")
    op.drop_table("access_levels")
    op.drop_table("role")
    op.drop_table("registration_status")
    op.drop_table("person")
    op.drop_table("event")
    op.drop_table("access_level")
    # ### end Alembic commands ###

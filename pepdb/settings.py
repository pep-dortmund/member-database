"""
Django settings for pepdb project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()


def getenv_bool(key, default=False):
    '''Generate a boolean value from env

    Values 1, true and yes are considered `True`, case-insensitively.
    '''
    value = os.getenv(key)
    if value is None:
        return default
    result = value.lower() in {'1', 'true', 'yes'}
    return result


CONFIG_PREFIX = "PEPDB_"
AUTH_USER_MODEL = 'pepdb_auth.User'

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ[CONFIG_PREFIX + 'SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = getenv_bool(CONFIG_PREFIX + 'DEBUG', False)

hosts = os.environ.get(CONFIG_PREFIX + "ALLOWED_HOSTS")
ALLOWED_HOSTS = hosts.split(",") if hosts is not None else []


# Application definition

INSTALLED_APPS = [
    'pepdb_auth.apps.PepdbAuthConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pepdb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pepdb.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
default_db = {
    "ENGINE": os.getenv(CONFIG_PREFIX + "DB_ENGINE", "django.db.backends.sqlite3"),
}

_is_sqlite = default_db["ENGINE"] == "django.db.backends.sqlite3"
default_db["NAME"] = os.getenv(
    CONFIG_PREFIX + "DB_NAME",
    str(BASE_DIR / 'pepdb.sqlite3') if _is_sqlite else ""
)

for key in ("USER", "PASSWORD", "HOST", "PORT"):
    config_key = f"{CONFIG_PREFIX}DB_{key}"
    if config_key in os.environ:
        default_db[key] = os.environ[config_key]

DATABASES = {'default': default_db}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/
LANGUAGE_CODE = os.getenv(CONFIG_PREFIX + 'LANGUAGE_CODE', 'de-de')
TIME_ZONE = os.getenv(CONFIG_PREFIX + 'TIME_ZONE', 'Europe/Berlin')
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/
STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
